<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lion09.chat.ChatMsgMapper">

<insert id="insertUser">
    INSERT INTO chatMessages (num, userId, postId, nickName, type, message, time, fileDir, fileName) VALUES 
    (#{num}, #{userId}, #{postId}, #{nickName}, #{type}, #{message}, sysdate, #{fileDir}, #{fileName})
</insert>

<select id="maxNum" resultType="Integer">
	select nvl(max(num),0) from chatMessages
</select>

<!-- 여러명 조회 -->
<select id="getUserList" resultType="String">
	select distinct nickName from chatMessages where postId = #{postId} and nickname != '알수없음'
</select>

<!-- 1명 조회 -->
<select id="getUser" resultType="String">
	select nickName from chatMessages 
	where postId = #{postId} 
	and userId = #{userId} 
	and Type = 'ENTER'
	and nickName != '알수없음'
</select>
 
<update id="remove">
	update chatMessages set nickName ='알수없음' where postId = #{postId} and userId = #{userId}
</update>

<!-- 들어온 시간 이후의 메세지만 출력되도록 -->
<select id="getMsg" resultType="com.lion09.chat.ChatDTO">
	SELECT cm.fileDir, cm.fileName, cm.nickName, cm.message, cm.type, cm.time, m.profileImgName
	FROM chatMessages AS cm
	INNER JOIN member AS m ON cm.userId = m.userId
	WHERE cm.postId = #{postId} 
	AND cm.time >= (
	    SELECT cm_inner.time
	    FROM chatMessages AS cm_inner
	    WHERE cm_inner.userId = #{userId} 
	    AND cm_inner.type IN ('MASTER', 'ENTER')
	    AND cm_inner.nickName != '알수없음'
	    ORDER BY cm_inner.time ASC
	    LIMIT 1
	)
	AND cm.userId = #{userId} 
	ORDER BY cm.time ASC;
</select>

<delete id="delMsg">
	delete chatMessages where postId = #{postId}
</delete>
</mapper>